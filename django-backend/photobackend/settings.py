"""
Django settings for photobackend project.

Generated by 'django-admin startproject' using Django 5.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
import os
from dotenv import load_dotenv # Import load_dotenv

DEBUG = True
# Load environment variables
load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv('SECRET_KEY', 'django-insecure-zki-ag25=u+c8oziv!28#f1)-1r*t+k@guo4rq=9)eel0pntyk') # Get from .env
# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.getenv('DEBUG', 'False').lower() == 'true' # Get from .env

ALLOWED_HOSTS = ['98.70.209.206', '135.235.249.10', 'localhost', '127.0.0.1']
# You might need to add your Azure App Service/AKS domain here in production


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'corsheaders',
    'users',
    'photoapp',
    'api',
    'storages', # Add django-storages here
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'photobackend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'photobackend.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2', # Change to PostgreSQL engine
        'NAME': os.getenv('DB_NAME'),
        'USER': os.getenv('DB_USER'),
        'PASSWORD': os.getenv('DB_PASSWORD'),
        'HOST': os.getenv('DB_HOST'),
        'PORT': '5432', # Default PostgreSQL port
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Azure Blob Storage Configuration
AZURE_ACCOUNT_NAME = os.getenv('AZURE_STORAGE_ACCOUNT_NAME')
AZURE_STORAGE_CONNECTION_STRING = os.getenv('AZURE_STORAGE_CONNECTION_STRING')

AZURE_STATIC_CONTAINER = os.getenv('AZURE_CONTAINER_STATIC', 'static')
AZURE_MEDIA_CONTAINER = os.getenv('AZURE_CONTAINER_MEDIA', 'photos') # Make sure this matches your container name for media

AZURE_OVERWRITE_FILES = False # Set to True if you want new uploads to overwrite existing files with the same name

STORAGES = {
    "default": { # This is for your media files (e.g., photos uploaded by users)
        "BACKEND": "storages.backends.azure_storage.AzureStorage",
        "OPTIONS": {
            "connection_string": AZURE_STORAGE_CONNECTION_STRING,
            "azure_container": AZURE_MEDIA_CONTAINER,
            "overwrite_files": AZURE_OVERWRITE_FILES,
            # "azure_proxy_ssl": True, # REMOVED: 'azure_proxy_ssl' is not a valid option here
            # "url_expiration_secs": 3600, # Uncomment and set if you want signed URLs for media
        },
    },
    "staticfiles": { # This is for your Django static files (CSS, JS, admin files)
        "BACKEND": "storages.backends.azure_storage.AzureStorage",
        "OPTIONS": {
            "connection_string": AZURE_STORAGE_CONNECTION_STRING,
            "azure_container": AZURE_STATIC_CONTAINER,
            "overwrite_files": AZURE_OVERWRITE_FILES,
            # "azure_proxy_ssl": True, # REMOVED: 'azure_proxy_ssl' is not a valid option here
            # "public_container": True, # REMOVED: 'public_container' is not a valid option here
        },
    },
}


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/
STATIC_URL = f'https://{AZURE_ACCOUNT_NAME}.blob.core.windows.net/{AZURE_STATIC_CONTAINER}/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles_build') # Collectstatic will gather files here before uploading to Azure

# Media files (uploads)
MEDIA_URL = f'https://{AZURE_ACCOUNT_NAME}.blob.core.windows.net/{AZURE_MEDIA_CONTAINER}/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media_local') # Optional: Local root for media files if you need local access

# Default primary key field type
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# CORS settings
CORS_ALLOW_ALL_ORIGINS = False # IMPORTANT: Change to False for production!
CORS_ALLOWED_ORIGINS = [
    "http://localhost:3000",
    'http://135.235.249.10', # React frontend (your specific IP)
    'http://98.70.209.206:8000', # Your backend IP with port (if direct access)
    'http://98.70.209.206', # Your backend IP without port (if proxy/ingress handles port)
    # Add your frontend URL here when deployed, e.g., "https://yourfrontend.azurewebsites.net"
]

# REST Framework settings
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ]
}
APPEND_SLASH = False # Keep as is based on your API configuration

# Custom User Model
AUTH_USER_MODEL = 'users.User' # Specify your custom user model

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} {module} {message}',
            'style': '{',
        },
    },
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
            'formatter': 'verbose',
        },
    },
    'root': {
        'handlers': ['console'],
        'level': 'DEBUG',
    },
}

